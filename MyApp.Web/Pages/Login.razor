@page "/login"
@using Blazored.LocalStorage
@inject HttpClient Http
@inject NavigationManager Nav
@inject ILocalStorageService LocalStorage


<h3>Login</h3>

<FluentTextField @bind-Value="loginModel.UsernameOrEmail" Placeholder="Username or Email" />
<FluentTextField @bind-Value="loginModel.Password" Placeholder="Password" Type="password" />

<FluentButton Appearance="Appearance.Accent" OnClick="LoginAsync">Login</FluentButton>

@if (!string.IsNullOrEmpty(error))
{
    <FluentBadge Color="Color.Danger">@error</FluentBadge>
}

@code
{
    private LoginRequest loginModel = new();
    private string? error;

    private async Task LoginAsync()
    {
        error = null;

        try
        {
            var response = await Http.PostAsJsonAsync("https://localhost:7015/api/auth/login", loginModel);


            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadFromJsonAsync<LoginResponse>();
                if (result is not null)
                {
                    await LocalStorage.SetItemAsync("authToken", result.Token);
                    Nav.NavigateTo("/");
                }
            }

            else
            {
                error = "Invalid login credentials.";
            }
        }
        catch (Exception ex)
        {
            error = $"Something went wrong: {ex.Message}";
        }
    }

    public class LoginRequest
    {
        public string UsernameOrEmail { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }

    public class LoginResponse
    {
        public string Token { get; set; } = string.Empty;
        public string Username { get; set; } = string.Empty;
        public string Role { get; set; } = string.Empty;
    }
}
