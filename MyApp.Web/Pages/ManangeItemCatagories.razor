@page "/manage-item-catagories"
@using Blazored.LocalStorage
@inject HttpClient Http
@inject NavigationManager Nav
@inject ILocalStorageService LocalStorage

<h3>Manage Item Categories</h3>

<div class="d-flex justify-content-between align-items-start">
    <div class="flex-grow-1">
        <table class="table table-bordered table-hover table-lg custom-table">
            <thead class="table-light">
                <tr>
                    <th style="width: 50px;">Default</th>
                    <th style="width: 250px;">Name</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < ItemCategories.Count; i++)
                {
                    var category = ItemCategories[i];
                    var rowClass = i % 2 == 0 ? "even-row" : "odd-row";
                    <tr class="@rowClass @(SelectedCategory == category ? "table-active" : "")"
                        @onclick="() => SelectCategory(category)"
                        style="cursor:pointer;">
                        <td class="align-middle text-center" @onclick:stopPropagation>
                            <input type="checkbox"
                                   checked="@category.IsDefault"
                                   @onchange="() => SetDefaultCategory(category)" />
                        </td>
                        <td class="align-middle">@category.Name</td>
                        <td class="align-middle">@category.Description</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="ms-4" style="min-width: 220px; position: fixed; right: 60px; top: 120px;">
        <div class="d-flex flex-column align-items-stretch gap-3">
            <button class="btn btn-primary custom-btn btn-lg py-4" @onclick="AddCategory">Add Item Category</button><br />
            <button class="btn btn-secondary custom-btn btn-lg py-4" @onclick="EditCategory" disabled="@(!IsItemSelected)">Edit Item Category</button><br />
            <button class="btn btn-danger custom-btn btn-lg py-4" @onclick="DeleteCategory" disabled="@(!IsItemSelected)">Delete Item Category</button>
        </div>
    </div>

    <style>
        .custom-btn {
            min-width: 220px;
            min-height: 56px;
            font-size: 1.15rem;
            font-weight: 500;
            margin-bottom: 0 !important;
        }

        .d-flex.flex-column.gap-3 > .custom-btn:not(:last-child) {
            margin-bottom: 1rem !important;
        }
    </style>
</div>

<style>
    .custom-table {
        min-width: 700px;
        font-size: 1.1rem;
        border-collapse: separate;
        border-spacing: 0;
        background-color: #fff;
        box-shadow: 0 2px 8px rgba(0,0,0,0.05);
    }

        .custom-table th, .custom-table td {
            border: 1px solid #dee2e6 !important;
            padding: 1rem 1.25rem;
        }

        .custom-table thead th {
            background-color: #f8f9fa;
            font-weight: 600;
            text-align: left;
        }

        .custom-table tbody tr:hover {
            background-color: #f1f3f5;
        }

        .custom-table .even-row {
            background-color: #ffffff;
        }

        .custom-table .odd-row {
            background-color: #f6f8fa;
        }

    .table-active {
        background-color: #e2e6ea !important;
    }
</style>

@code
{
    private List<ItemCategory> ItemCategories = new();
    private ItemCategory? SelectedCategory;

    protected override async Task OnInitializedAsync()
    {
        // TODO: Load categories from API or local storage
        // Example data for now
        ItemCategories = new List<ItemCategory>
        {
            new ItemCategory { Id = 1, Name = "Electronics", Description = "Electronic items" },
            new ItemCategory { Id = 2, Name = "Books", Description = "All kinds of books" }
        };
    }

    private bool IsItemSelected => SelectedCategory != null;

    private void SelectCategory(ItemCategory category)
    {
        if (SelectedCategory == category)
            SelectedCategory = null;
        else
            SelectedCategory = category;
    }

    private void SetDefaultCategory(ItemCategory category)
    {
        foreach (var cat in ItemCategories)
            cat.IsDefault = false;
        category.IsDefault = true;
    }

    private void AddCategory()
    {
        // TODO: Implement add logic (e.g., show modal dialog)
    }

    private void EditCategory()
    {
        if (SelectedCategory == null) return;
        // TODO: Implement edit logic (e.g., show modal dialog)
    }

    private void DeleteCategory()
    {
        if (SelectedCategory == null) return;
        // TODO: Implement delete logic (e.g., confirmation and remove from list)
    }

    public class ItemCategory
    {
        public int Id { get; set; }
        public string Name { get; set; } = string.Empty;
        public string Description { get; set; } = string.Empty;
        public bool IsDefault { get; set; } // Added for default tracking
    }
}
